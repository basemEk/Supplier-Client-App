{"ast":null,"code":"var _jsxFileName = \"/home/bassem/Desktop/Supplier-Client-App/front/src/components/Navbar/Navbar.js\";\nimport React, { Component } from 'react';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nexport default class Navbar extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      render: ({\n        location,\n        history\n      }) => /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(SideNav, {\n        onSelect: selected => {\n          const to = '/' + selected;\n\n          if (location.pathname !== to) {\n            history.push(to);\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SideNav.Toggle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(SideNav.Nav, {\n        defaultSelected: \"home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(NavItem, {\n        eventKey: \"home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(NavIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-fw fa-home\",\n        style: {\n          fontSize: '1.75em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(NavText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }\n      }, \"Home\")), /*#__PURE__*/React.createElement(NavItem, {\n        eventKey: \"devices\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(NavIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-fw fa-device\",\n        style: {\n          fontSize: '1.75em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(NavText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }\n      }, \"Devices\")))), /*#__PURE__*/React.createElement(\"main\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        component: props => /*#__PURE__*/React.createElement(RootComponent, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 59\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/home\",\n        component: props => /*#__PURE__*/React.createElement(Home, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 57\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/devices\",\n        component: props => /*#__PURE__*/React.createElement(Devices, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 60\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }\n    })), \"React JSX API Properties SideNav Name  Type  Default  Description componentClass  element  'nav'  A custom element for this component. disabled  boolean   Whether the navigation toggle is disabled. expanded  boolean   Whether the side navigation is expanded or collapsed. onToggle  function(boolean)   Callback fired when toggling the side navigation between expanded and collapsed state. onSelect  function(eventKey, event)   Callback fired when a navigation item is selected. Toggle Name  Type  Default  Description componentClass  element  'button'  A custom element for this component. disabled  boolean  false  Whether the navigation toggle is disabled. expanded  boolean  false  Whether the side navigation is expanded or collapsed. Nav Name  Type  Default  Description componentClass  element  'div'  A custom element for this component. onSelect  function(eventKey, event)   Callback fired when a navigation item is selected. selected  any   The selected navigation item. defaultSelected  any   The initially selected navigation item. expanded  boolean  false  Whether the side navigation is expanded or collapsed. NavItem Name  Type  Default  Description componentClass  element  'div'  A custom element for this component. active  boolean  false  Highlight the navigation item as active. disabled  boolean  false  Disable the navigation item, making it unselectable. expanded  boolean  false  Whether the navigation item is expanded or collapsed. eventKey  any  (required)  Value passed to the onSelect handler, useful for identifying the selected navigation item. onClick  function(event)   Callback fired when the navigation item is clicked. onSelect  function(eventKey, event)   Callback fired when a navigation item is selected. navitemClassName navitemStyle subnavClassName subnavStyle NavIcon Name  Type  Default  Description children  any NavText Name  Type  Default  Description children  any License MIT GitHub trendmicro-frontend/react-sidenav 23580 React SideNav component \\u2014 Read More https://trendmicro-frontend.github.io/react-sidenav/ Latest commit to the master branch on 4-11-2020 Download as zip Comments Subscribe to React.js Examples Get the latest posts delivered right to your inbox \\u2014 React.js Examples \\u2014 Navigator 30 March 2020 KaiOS navigation with React Hooks KaiOS navigation with React Hooks. 29 July 2018 Easily render header buttons for react-navigation This package will help you render buttons in the navigation bar and handle the styling so you don't have to. 03 April 2018 Navigation drawer built with the awesome react-motion and react-hammerjs Navigation drawer built with the awesome react-motion See all 4 posts \\u2192 \\u2014 Next Post \\u2014 12 June 2018 A decorator to bind only unique component methods An ES2016 decorator that autobinds all of the unique class methods that are not React. Miscellaneous \\u2014 Prev Post \\u2014 12 June 2018 A git diff component to consume the git unified diff output A git diff component to consume the git unified diff output. Miscellaneous Latest An autocomplete verification code input with react 2020-06-25 A Timeline Component for React.js 2020-06-23 React.js PWA Schedule for Baikal State University students 2020-06-21 Cubing Timer using Reactjs 2020-06-20 A simple listview for ReactJS that implements the concept of virtualization 2020-06-19 Tag Miscellaneous 142 UI 120 Reactjs 113 Chart 88 Images 72 Calendar 65 Animation 63 React Native 59 Scroll 59 Form 57\");\n  }\n\n}","map":{"version":3,"sources":["/home/bassem/Desktop/Supplier-Client-App/front/src/components/Navbar/Navbar.js"],"names":["React","Component","Navbar","render","location","history","selected","to","pathname","push","fontSize","props"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\n\nexport default class Navbar extends Component {\n    \n    \n \n    render() {\n        return (\n              <div>\n                  \n                  <Router>\n    <Route render={({ location, history }) => (\n        <React.Fragment>\n            <SideNav\n                onSelect={(selected) => {\n                    const to = '/' + selected;\n                    if (location.pathname !== to) {\n                        history.push(to);\n                    }\n                }}\n            >\n                <SideNav.Toggle />\n                <SideNav.Nav defaultSelected=\"home\">\n                    <NavItem eventKey=\"home\">\n                        <NavIcon>\n                            <i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em' }} />\n                        </NavIcon>\n                        <NavText>\n                            Home\n                        </NavText>\n                    </NavItem>\n                    <NavItem eventKey=\"devices\">\n                        <NavIcon>\n                            <i className=\"fa fa-fw fa-device\" style={{ fontSize: '1.75em' }} />\n                        </NavIcon>\n                        <NavText>\n                            Devices\n                        </NavText>\n                    </NavItem>\n                </SideNav.Nav>\n            </SideNav>\n            <main>\n                <Route path=\"/\" exact component={props => <RootComponent />} />\n                <Route path=\"/home\" component={props => <Home />} />\n                <Route path=\"/devices\" component={props => <Devices />} />\n            </main>\n        </React.Fragment>\n    )}\n    />\n</Router>\n\nReact JSX\nAPI\nProperties\nSideNav\nName \tType \tDefault \tDescription\ncomponentClass \telement \t'nav' \tA custom element for this component.\ndisabled \tboolean \t\tWhether the navigation toggle is disabled.\nexpanded \tboolean \t\tWhether the side navigation is expanded or collapsed.\nonToggle \tfunction(boolean) \t\tCallback fired when toggling the side navigation between expanded and collapsed state.\nonSelect \tfunction(eventKey, event) \t\tCallback fired when a navigation item is selected.\nToggle\nName \tType \tDefault \tDescription\ncomponentClass \telement \t'button' \tA custom element for this component.\ndisabled \tboolean \tfalse \tWhether the navigation toggle is disabled.\nexpanded \tboolean \tfalse \tWhether the side navigation is expanded or collapsed.\nNav\nName \tType \tDefault \tDescription\ncomponentClass \telement \t'div' \tA custom element for this component.\nonSelect \tfunction(eventKey, event) \t\tCallback fired when a navigation item is selected.\nselected \tany \t\tThe selected navigation item.\ndefaultSelected \tany \t\tThe initially selected navigation item.\nexpanded \tboolean \tfalse \tWhether the side navigation is expanded or collapsed.\nNavItem\nName \tType \tDefault \tDescription\ncomponentClass \telement \t'div' \tA custom element for this component.\nactive \tboolean \tfalse \tHighlight the navigation item as active.\ndisabled \tboolean \tfalse \tDisable the navigation item, making it unselectable.\nexpanded \tboolean \tfalse \tWhether the navigation item is expanded or collapsed.\neventKey \tany \t(required) \tValue passed to the onSelect handler, useful for identifying the selected navigation item.\nonClick \tfunction(event) \t\tCallback fired when the navigation item is clicked.\nonSelect \tfunction(eventKey, event) \t\tCallback fired when a navigation item is selected.\nnavitemClassName \t\t\t\nnavitemStyle \t\t\t\nsubnavClassName \t\t\t\nsubnavStyle \t\t\t\nNavIcon\nName \tType \tDefault \tDescription\nchildren \tany \t\t\nNavText\nName \tType \tDefault \tDescription\nchildren \tany \t\t\nLicense\n\nMIT\nGitHub\ntrendmicro-frontend/react-sidenav\n23580\n\nReact SideNav component — Read More\n\nhttps://trendmicro-frontend.github.io/react-sidenav/\nLatest commit to the master branch on 4-11-2020\nDownload as zip\nComments\nSubscribe to React.js Examples\n\nGet the latest posts delivered right to your inbox\n— React.js Examples —\nNavigator\n\n    30 March 2020\n    KaiOS navigation with React Hooks\n\n    KaiOS navigation with React Hooks.\n    29 July 2018\n    Easily render header buttons for react-navigation\n\n    This package will help you render buttons in the navigation bar and handle the styling so you don't have to.\n    03 April 2018\n    Navigation drawer built with the awesome react-motion and react-hammerjs\n\n    Navigation drawer built with the awesome react-motion\n\nSee all 4 posts →\n— Next Post —\n12 June 2018\nA decorator to bind only unique component methods\n\nAn ES2016 decorator that autobinds all of the unique class methods that are not React.\nMiscellaneous\n— Prev Post —\n12 June 2018\nA git diff component to consume the git unified diff output\n\nA git diff component to consume the git unified diff output.\nMiscellaneous\nLatest\nAn autocomplete verification code input with react\n2020-06-25\nA Timeline Component for React.js\n2020-06-23\nReact.js PWA Schedule for Baikal State University students\n2020-06-21\nCubing Timer using Reactjs\n2020-06-20\nA simple listview for ReactJS that implements the concept of virtualization\n2020-06-19\nTag\nMiscellaneous 142\nUI 120\nReactjs 113\nChart 88\nImages 72\nCalendar 65\nAnimation 63\nReact Native 59\nScroll 59\nForm 57\n                 \n              </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}